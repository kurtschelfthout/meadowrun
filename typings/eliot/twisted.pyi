from _typeshed import Incomplete

class AlreadyFinished(Exception): ...

class DeferredContext:
    result: Incomplete
    def __init__(self, deferred) -> None: ...
    def addCallbacks(
        self,
        callback,
        errback: Incomplete | None = ...,
        callbackArgs: Incomplete | None = ...,
        callbackKeywords: Incomplete | None = ...,
        errbackArgs: Incomplete | None = ...,
        errbackKeywords: Incomplete | None = ...,
    ): ...
    def addCallback(self, callback, *args, **kw): ...
    def addErrback(self, errback, *args, **kw): ...
    def addBoth(self, callback, *args, **kw): ...
    def addActionFinish(self): ...

class TwistedDestination:
    def __init__(self) -> None: ...
    def __call__(self, message) -> None: ...

class _RedirectLogsForTrial:
    def __init__(self, sys) -> None: ...
    def __call__(self): ...

redirectLogsForTrial: Incomplete

def inline_callbacks(original, debug: bool = ...): ...
